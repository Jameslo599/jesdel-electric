// ─────────────────────────────────────────────────────────────────────────────
// CRITICAL PAGE STYLES
// Above-the-fold and high-priority styles for the home page's landing section.
// Put the first section of the home page in here, so it loads immediately.
// The rest of the home page styles in local.css will be deferred and
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #hero-1785 {
    /* 200px - 300px - leaving extra space for the navigation */
    padding: clamp(12.5rem, 25.95vw, 18.75em) calc(16 / 16 * 1rem);
    /* prevents the topper line from causing an overflow */
    overflow: hidden;
    position: relative;
    z-index: 1;
    background-color: #111;
    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
      gap: calc(48 / 16 * 1rem);
    }

    .cs-content {
      text-align: center;
      width: 100%;
      max-width: calc(750 / 16 * 1rem);
    }

    .cs-title {
      /* 49px - 84px */
      font-size: clamp(3.0625rem, 6vw, 5.25rem);
    }

    .cs-title,
    .cs-text {
      color: var(--bodyTextColorWhite);
    }

    .cs-text {
      margin-bottom: calc(32 / 16 * 1rem);
    }

    .cs-button-group {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-button-solid {
      font-size: calc(16 / 16 * 1rem);
      font-weight: 700;
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-align: center;
      text-decoration: none;
      min-width: calc(200 / 16 * 1rem);
      margin: 0;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
      padding: 0 calc(24 / 16 * 1rem);
      background-color: var(--primary);
      color: var(--bodyTextColorWhite);
      border-radius: calc(4 / 16 * 1rem);
      display: inline-block;
      position: relative;
      z-index: 1;

      &:before {
        content: '';
        width: 0%;
        height: 100%;
        background: #000;
        opacity: 1;
        border-radius: calc(4 / 16 * 1rem);
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: width 0.3s;
      }

      &:hover {
        &:before {
          width: 100%;
        }
      }
    }

    .cs-graphic {
      width: 100%;
      min-width: calc(1920 / 16 * 1rem);
      height: auto;
      object-fit: cover;
      position: absolute;
      bottom: 0;
      left: 50%;
      z-index: 0;
      transform: translateX(-50%);
    }

    .cs-graphic-dark {
      display: none;
    }

    .cs-background {
      width: 100%;
      height: 100%;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -2;

      &:before {
        /* Overlay */
        content: '';
        width: 100%;
        height: 100%;
        background: #000;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
        opacity: 0.7;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
      }

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        position: absolute;
        top: 0;
        left: 0;
      }
    }
  }
}

/* Large Desktop - 1920px */
@media only screen and (min-width: 120rem) {
  #hero-1785 {
    /* this ties the padding bottom value to the size of the screen width. The wider the image gets the taller it gets, meaning it will get clsoer and closer to the content. This makes the padding bottom value grow with the screen size so it accounts for the growing height of the svg graphic getting taller */
    padding-bottom: 14vw;
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #hero-1785 {
      .cs-background {
        &:before {
          opacity: 0.85;
        }
      }

      .cs-graphic {
        display: none;
      }

      .cs-graphic-dark {
        display: block;
        filter: brightness(0) saturate(100%) invert(26%) sepia(80%)
          saturate(5807%) hue-rotate(14deg) brightness(84%) contrast(90%);
      }
    }
  }
}

/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #services-448 {
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      /* changes at 1280px at tablet */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-card-group {
      width: 100%;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      /* 16px - 20px */
      column-gap: clamp(1rem, 1.5vw, 1.25rem);
      /* 24px - 60px */
      row-gap: clamp(1.5rem, 5vw, 3.75rem);
    }

    .cs-item {
      list-style: none;
      width: 100%;
      max-width: calc(360 / 16 * 1rem);
      /* changes at desktop */
      padding-top: calc(144 / 10 * 1rem);
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      &:hover {
        .cs-picture {
          img {
            transform: scale(1.2);
            opacity: 0.4;
          }
        }

        .cs-flex {
          &:before {
            opacity: 1;
          }
        }
      }
    }

    .cs-picture {
      width: 100%;
      /* changes at desktop */
      height: calc(250 / 16 * 1rem);
      border-radius: calc(8 / 16 * 1rem);
      background-color: var(--primary);
      /* clips the corners of the image */
      overflow: hidden;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* makes it behave like a background image */
        object-fit: cover;
        /* positions top of image to the top of the container */
        object-position: top;
        transition: transform 0.9s, opacity 0.5s;
      }
    }

    .cs-flex {
      text-align: center;
      width: 88%;
      padding: 0 calc(24 / 16 * 1rem) calc(24 / 16 * 1rem) calc(24 / 16 * 1rem);
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      border: 1px solid #dad9e3;
      border-radius: calc(12 / 16 * 1rem);
      background-color: #fff;
      box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      position: relative;
      &:before {
        /* hover border box */
        content: '';
        background: transparent;
        /* prevents the mouse from interacting with it */
        pointer-events: none;
        border: 4px solid var(--primary);
        border-radius: calc(12 / 16 * 1rem);
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        opacity: 0;
        position: absolute;
        display: block;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        transition: opacity 0.5s;
      }
    }

    .cs-wrapper {
      /* 80px - 120px */
      width: clamp(5rem, 9.2vw, 7.5rem);
      height: clamp(5rem, 9.2vw, 7.5rem);
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      /* we use the same clamp value for height & width, but multiple by -.5 so it will be a negative value, and be half of the height.  Negative margins pull things toward the element so they overlap them, in this case we want the .cs-wrapper to overlap .cs-flex by half its height, so we use the same clamp for height and half it for the margin top value */
      margin-top: calc(clamp(5rem, 9.2vw, 7.5rem) * -0.5);
      border-radius: 50%;
      border: 4px solid var(--primary);
      background-color: #fff;
      /* prevents border from affecting height and width */
      box-sizing: border-box;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      z-index: 10;
    }

    .cs-icon {
      /* 48px - 64px */
      // width: clamp(3rem, 4.3vw, 4rem);
      width: 64px;
      height: auto;
      display: block;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 1.9vw, 1.5625rem);
      line-height: 1.2em;
      font-weight: 700;
      margin: 0 0 calc(8 / 16 * 1rem) 0;
      color: var(--headerColor);
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      font-weight: 400;
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      color: var(--bodyTextColor);
    }

    .cs-link {
      /* 16px - 20px */
      font-size: clamp(1rem, 1.5vw, 1.25rem);
      line-height: 1.5em;
      font-weight: 700;
      text-transform: uppercase;
      text-decoration: none;
      margin: 0;
      color: var(--primary);
      display: inline-block;
      position: relative;

      &:hover {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* animated underline */
        content: '';
        width: 0%;
        height: 3px;
        background: currentColor;
        opacity: 1;
        position: absolute;
        display: block;
        bottom: calc(-2 / 16 * 1rem);
        left: 0;
        transition: width 0.3s;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #services-448 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-card-group {
      flex-direction: row;
    }

    .cs-item {
      width: 47%;
    }
  }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #services-448 {
    .cs-card-group {
      flex-wrap: nowrap;
    }
    .cs-item {
      width: 100%;
      /* 144px - 274px */
      padding-top: clamp(18rem, 17.5vw, 25rem);
    }

    .cs-picture {
      /* 224px - 428px */
      height: clamp(12rem, 28vw, 26.75rem);
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #services-448 {
      .cs-topper {
        color: var(--primaryLight);
      }

      .cs-title {
        color: var(--bodyTextColorWhite);
      }

      .cs-text {
        color: var(--bodyTextColorWhite);
        opacity: 0.8;
      }

      .cs-flex,
      .cs-wrapper {
        background-color: var(--medium);
      }

      .cs-h3,
      .cs-item-text {
        color: var(--bodyTextColorWhite);
      }

      .cs-link {
        color: var(--primaryLight);
      }
    }
  }
}
